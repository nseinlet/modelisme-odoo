<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data noupdate="1">
      <!-- Fields -->
      <record model="ir.model.fields" id="x_product_ismodele">
          <field name="name">x_ismodele</field>
          <field name="field_description">Is a scaled model</field>
          <field name="model_id" eval="ref('product.model_product_template')"/>
          <field name="model">product.template</field>
          <field name="ttype">boolean</field>
          <field name="state">manual</field>
      </record>
      <record model="ir.model.fields" id="x_product_modele_location">
          <field name="name">x_model_location_id</field>
          <field name="field_description">Scaled model location</field>
          <field name="model_id" eval="ref('product.model_product_template')"/>
          <field name="model">product.template</field>
          <field name="ttype">many2one</field>
          <field name="relation">stock.location</field>
          <field name="state">manual</field>
      </record>
      <record model="ir.model.fields" id="x_product_modele_scrap_location">
          <field name="name">x_model_scrap_location_id</field>
          <field name="field_description">Scaled model scrap location</field>
          <field name="model_id" eval="ref('product.model_product_template')"/>
          <field name="model">product.template</field>
          <field name="ttype">many2one</field>
          <field name="relation">stock.location</field>
          <field name="state">manual</field>
      </record>
      <record model="ir.model.fields" id="x_product_modele_move_ids">
          <field name="name">x_model_move_ids</field>
          <field name="field_description">Building items</field>
          <field name="model_id" eval="ref('product.model_product_template')"/>
          <field name="model">product.template</field>
          <field name="ttype">one2many</field>
          <field name="relation">stock.move</field>
          <field name="relation_field">product_id</field>
          <field name="state">manual</field>
      </record>
    </data>
    <data noupdate="0">
      <!-- Actions -->
      <record id="create_model_locations_action" model="ir.actions.server">
            <field name="name">Create scaled model locations</field>
            <field name="model_id" ref="product.model_product_template"/>
            <field name="state">code</field>
            <field name="code"><![CDATA[
if object.x_ismodele:
    if object.x_model_location_id:
        object.x_model_location_id.write({'active': True})
    else:
        stock_loc = env['stock.location'].create({
            'name': 'Building item %s' % (object.name),
            'active': True,
            'usage': 'customer',
            'location_id': env.ref('stock.stock_location_locations').id,
        })
        object.write({'x_model_location_id': stock_loc.id})
    if object.x_model_scrap_location_id:
        object.x_model_scrap_location_id.write({'active': True})
    else:
        stock_loc = env['stock.location'].create({
            'name': 'Building item (scrap) %s' % (object.name),
            'active': True,
            'usage': 'customer',
            'scrap_location': True,
            'location_id': env.ref('stock.stock_location_locations').id,
        })
        object.write({'x_model_scrap_location_id': stock_loc.id})
else:
    if object.x_model_location_id:
        object.x_model_location_id.write({'active': False})
    if object.x_model_scrap_location_id:
        object.x_model_scrap_location_id.write({'active': False})
]]>
            </field>
        </record>

        <!-- automated action -->
        <record id="create_model_locations_automated_action" model="base.action.rule">
           <field name="name">Create scaled model locations</field>
           <field name="model_id" ref="product.model_product_template"/>
           <field name="active" eval="True"/>
           <field name="kind">on_create_or_write</field>
           <field name="server_action_ids" eval="[(6, 0, [ref('create_model_locations_action')])]"/>
       </record>

    </data>
</openerp>
